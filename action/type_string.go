// Code generated by "enumer -type=Type -transform=snake -output=type_string.go -json"; DO NOT EDIT.

package action

import (
	"encoding/json"
	"fmt"
	"strings"
)

const _TypeName = "cursor_movecamera_zoomsummon_unitupdate_unittpsremove_unitsteal_liveplace_towerremove_towerselect_towerselected_towerselected_tower_invaliddeselect_towerincome_ticktower_attackunit_killedwindow_resizingnavigate_tostart_gameopen_tower_menuclose_tower_menugo_homechange_unit_linesign_up_erroruser_sign_upuser_sign_inuser_sign_outjoin_waiting_roomexit_waiting_roomtoggle_statsversion_erroradd_playerremove_playersync_statesync_userswait_room_countdown_ticksync_waiting_room"

var _TypeIndex = [...]uint16{0, 11, 22, 33, 44, 47, 58, 68, 79, 91, 103, 117, 139, 153, 164, 176, 187, 202, 213, 223, 238, 254, 261, 277, 290, 302, 314, 327, 344, 361, 373, 386, 396, 409, 419, 429, 453, 470}

const _TypeLowerName = "cursor_movecamera_zoomsummon_unitupdate_unittpsremove_unitsteal_liveplace_towerremove_towerselect_towerselected_towerselected_tower_invaliddeselect_towerincome_ticktower_attackunit_killedwindow_resizingnavigate_tostart_gameopen_tower_menuclose_tower_menugo_homechange_unit_linesign_up_erroruser_sign_upuser_sign_inuser_sign_outjoin_waiting_roomexit_waiting_roomtoggle_statsversion_erroradd_playerremove_playersync_statesync_userswait_room_countdown_ticksync_waiting_room"

func (i Type) String() string {
	if i < 0 || i >= Type(len(_TypeIndex)-1) {
		return fmt.Sprintf("Type(%d)", i)
	}
	return _TypeName[_TypeIndex[i]:_TypeIndex[i+1]]
}

// An "invalid array index" compiler error signifies that the constant values have changed.
// Re-run the stringer command to generate them again.
func _TypeNoOp() {
	var x [1]struct{}
	_ = x[CursorMove-(0)]
	_ = x[CameraZoom-(1)]
	_ = x[SummonUnit-(2)]
	_ = x[UpdateUnit-(3)]
	_ = x[TPS-(4)]
	_ = x[RemoveUnit-(5)]
	_ = x[StealLive-(6)]
	_ = x[PlaceTower-(7)]
	_ = x[RemoveTower-(8)]
	_ = x[SelectTower-(9)]
	_ = x[SelectedTower-(10)]
	_ = x[SelectedTowerInvalid-(11)]
	_ = x[DeselectTower-(12)]
	_ = x[IncomeTick-(13)]
	_ = x[TowerAttack-(14)]
	_ = x[UnitKilled-(15)]
	_ = x[WindowResizing-(16)]
	_ = x[NavigateTo-(17)]
	_ = x[StartGame-(18)]
	_ = x[OpenTowerMenu-(19)]
	_ = x[CloseTowerMenu-(20)]
	_ = x[GoHome-(21)]
	_ = x[ChangeUnitLine-(22)]
	_ = x[SignUpError-(23)]
	_ = x[UserSignUp-(24)]
	_ = x[UserSignIn-(25)]
	_ = x[UserSignOut-(26)]
	_ = x[JoinWaitingRoom-(27)]
	_ = x[ExitWaitingRoom-(28)]
	_ = x[ToggleStats-(29)]
	_ = x[VersionError-(30)]
	_ = x[AddPlayer-(31)]
	_ = x[RemovePlayer-(32)]
	_ = x[SyncState-(33)]
	_ = x[SyncUsers-(34)]
	_ = x[WaitRoomCountdownTick-(35)]
	_ = x[SyncWaitingRoom-(36)]
}

var _TypeValues = []Type{CursorMove, CameraZoom, SummonUnit, UpdateUnit, TPS, RemoveUnit, StealLive, PlaceTower, RemoveTower, SelectTower, SelectedTower, SelectedTowerInvalid, DeselectTower, IncomeTick, TowerAttack, UnitKilled, WindowResizing, NavigateTo, StartGame, OpenTowerMenu, CloseTowerMenu, GoHome, ChangeUnitLine, SignUpError, UserSignUp, UserSignIn, UserSignOut, JoinWaitingRoom, ExitWaitingRoom, ToggleStats, VersionError, AddPlayer, RemovePlayer, SyncState, SyncUsers, WaitRoomCountdownTick, SyncWaitingRoom}

var _TypeNameToValueMap = map[string]Type{
	_TypeName[0:11]:         CursorMove,
	_TypeLowerName[0:11]:    CursorMove,
	_TypeName[11:22]:        CameraZoom,
	_TypeLowerName[11:22]:   CameraZoom,
	_TypeName[22:33]:        SummonUnit,
	_TypeLowerName[22:33]:   SummonUnit,
	_TypeName[33:44]:        UpdateUnit,
	_TypeLowerName[33:44]:   UpdateUnit,
	_TypeName[44:47]:        TPS,
	_TypeLowerName[44:47]:   TPS,
	_TypeName[47:58]:        RemoveUnit,
	_TypeLowerName[47:58]:   RemoveUnit,
	_TypeName[58:68]:        StealLive,
	_TypeLowerName[58:68]:   StealLive,
	_TypeName[68:79]:        PlaceTower,
	_TypeLowerName[68:79]:   PlaceTower,
	_TypeName[79:91]:        RemoveTower,
	_TypeLowerName[79:91]:   RemoveTower,
	_TypeName[91:103]:       SelectTower,
	_TypeLowerName[91:103]:  SelectTower,
	_TypeName[103:117]:      SelectedTower,
	_TypeLowerName[103:117]: SelectedTower,
	_TypeName[117:139]:      SelectedTowerInvalid,
	_TypeLowerName[117:139]: SelectedTowerInvalid,
	_TypeName[139:153]:      DeselectTower,
	_TypeLowerName[139:153]: DeselectTower,
	_TypeName[153:164]:      IncomeTick,
	_TypeLowerName[153:164]: IncomeTick,
	_TypeName[164:176]:      TowerAttack,
	_TypeLowerName[164:176]: TowerAttack,
	_TypeName[176:187]:      UnitKilled,
	_TypeLowerName[176:187]: UnitKilled,
	_TypeName[187:202]:      WindowResizing,
	_TypeLowerName[187:202]: WindowResizing,
	_TypeName[202:213]:      NavigateTo,
	_TypeLowerName[202:213]: NavigateTo,
	_TypeName[213:223]:      StartGame,
	_TypeLowerName[213:223]: StartGame,
	_TypeName[223:238]:      OpenTowerMenu,
	_TypeLowerName[223:238]: OpenTowerMenu,
	_TypeName[238:254]:      CloseTowerMenu,
	_TypeLowerName[238:254]: CloseTowerMenu,
	_TypeName[254:261]:      GoHome,
	_TypeLowerName[254:261]: GoHome,
	_TypeName[261:277]:      ChangeUnitLine,
	_TypeLowerName[261:277]: ChangeUnitLine,
	_TypeName[277:290]:      SignUpError,
	_TypeLowerName[277:290]: SignUpError,
	_TypeName[290:302]:      UserSignUp,
	_TypeLowerName[290:302]: UserSignUp,
	_TypeName[302:314]:      UserSignIn,
	_TypeLowerName[302:314]: UserSignIn,
	_TypeName[314:327]:      UserSignOut,
	_TypeLowerName[314:327]: UserSignOut,
	_TypeName[327:344]:      JoinWaitingRoom,
	_TypeLowerName[327:344]: JoinWaitingRoom,
	_TypeName[344:361]:      ExitWaitingRoom,
	_TypeLowerName[344:361]: ExitWaitingRoom,
	_TypeName[361:373]:      ToggleStats,
	_TypeLowerName[361:373]: ToggleStats,
	_TypeName[373:386]:      VersionError,
	_TypeLowerName[373:386]: VersionError,
	_TypeName[386:396]:      AddPlayer,
	_TypeLowerName[386:396]: AddPlayer,
	_TypeName[396:409]:      RemovePlayer,
	_TypeLowerName[396:409]: RemovePlayer,
	_TypeName[409:419]:      SyncState,
	_TypeLowerName[409:419]: SyncState,
	_TypeName[419:429]:      SyncUsers,
	_TypeLowerName[419:429]: SyncUsers,
	_TypeName[429:453]:      WaitRoomCountdownTick,
	_TypeLowerName[429:453]: WaitRoomCountdownTick,
	_TypeName[453:470]:      SyncWaitingRoom,
	_TypeLowerName[453:470]: SyncWaitingRoom,
}

var _TypeNames = []string{
	_TypeName[0:11],
	_TypeName[11:22],
	_TypeName[22:33],
	_TypeName[33:44],
	_TypeName[44:47],
	_TypeName[47:58],
	_TypeName[58:68],
	_TypeName[68:79],
	_TypeName[79:91],
	_TypeName[91:103],
	_TypeName[103:117],
	_TypeName[117:139],
	_TypeName[139:153],
	_TypeName[153:164],
	_TypeName[164:176],
	_TypeName[176:187],
	_TypeName[187:202],
	_TypeName[202:213],
	_TypeName[213:223],
	_TypeName[223:238],
	_TypeName[238:254],
	_TypeName[254:261],
	_TypeName[261:277],
	_TypeName[277:290],
	_TypeName[290:302],
	_TypeName[302:314],
	_TypeName[314:327],
	_TypeName[327:344],
	_TypeName[344:361],
	_TypeName[361:373],
	_TypeName[373:386],
	_TypeName[386:396],
	_TypeName[396:409],
	_TypeName[409:419],
	_TypeName[419:429],
	_TypeName[429:453],
	_TypeName[453:470],
}

// TypeString retrieves an enum value from the enum constants string name.
// Throws an error if the param is not part of the enum.
func TypeString(s string) (Type, error) {
	if val, ok := _TypeNameToValueMap[s]; ok {
		return val, nil
	}

	if val, ok := _TypeNameToValueMap[strings.ToLower(s)]; ok {
		return val, nil
	}
	return 0, fmt.Errorf("%s does not belong to Type values", s)
}

// TypeValues returns all values of the enum
func TypeValues() []Type {
	return _TypeValues
}

// TypeStrings returns a slice of all String values of the enum
func TypeStrings() []string {
	strs := make([]string, len(_TypeNames))
	copy(strs, _TypeNames)
	return strs
}

// IsAType returns "true" if the value is listed in the enum definition. "false" otherwise
func (i Type) IsAType() bool {
	for _, v := range _TypeValues {
		if i == v {
			return true
		}
	}
	return false
}

// MarshalJSON implements the json.Marshaler interface for Type
func (i Type) MarshalJSON() ([]byte, error) {
	return json.Marshal(i.String())
}

// UnmarshalJSON implements the json.Unmarshaler interface for Type
func (i *Type) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return fmt.Errorf("Type should be a string, got %s", data)
	}

	var err error
	*i, err = TypeString(s)
	return err
}
