// Code generated by "enumer -type=Type -transform=snake -output=type_string.go -json"; DO NOT EDIT.

package action

import (
	"encoding/json"
	"fmt"
	"strings"
)

const _TypeName = "cursor_movecamera_zoomsummon_unitupdate_unitupdate_towertpsplace_towerremove_towerselect_towerselected_towerselected_tower_invaliddeselect_towerincome_tickwindow_resizingnavigate_tostart_gameopen_tower_menuclose_tower_menugo_homesign_up_erroruser_sign_upuser_sign_inuser_sign_outjoin_waiting_roomexit_waiting_roomstart_roomtoggle_statsversion_errorcreate_lobbydelete_lobbyjoin_lobbyadd_lobbiesselect_lobbyleave_lobbyupdate_lobbystart_lobbyadd_playerremove_playersync_statesync_userswait_room_countdown_ticksync_waiting_room"

var _TypeIndex = [...]uint16{0, 11, 22, 33, 44, 56, 59, 70, 82, 94, 108, 130, 144, 155, 170, 181, 191, 206, 222, 229, 242, 254, 266, 279, 296, 313, 323, 335, 348, 360, 372, 382, 393, 405, 416, 428, 439, 449, 462, 472, 482, 506, 523}

const _TypeLowerName = "cursor_movecamera_zoomsummon_unitupdate_unitupdate_towertpsplace_towerremove_towerselect_towerselected_towerselected_tower_invaliddeselect_towerincome_tickwindow_resizingnavigate_tostart_gameopen_tower_menuclose_tower_menugo_homesign_up_erroruser_sign_upuser_sign_inuser_sign_outjoin_waiting_roomexit_waiting_roomstart_roomtoggle_statsversion_errorcreate_lobbydelete_lobbyjoin_lobbyadd_lobbiesselect_lobbyleave_lobbyupdate_lobbystart_lobbyadd_playerremove_playersync_statesync_userswait_room_countdown_ticksync_waiting_room"

func (i Type) String() string {
	if i < 0 || i >= Type(len(_TypeIndex)-1) {
		return fmt.Sprintf("Type(%d)", i)
	}
	return _TypeName[_TypeIndex[i]:_TypeIndex[i+1]]
}

// An "invalid array index" compiler error signifies that the constant values have changed.
// Re-run the stringer command to generate them again.
func _TypeNoOp() {
	var x [1]struct{}
	_ = x[CursorMove-(0)]
	_ = x[CameraZoom-(1)]
	_ = x[SummonUnit-(2)]
	_ = x[UpdateUnit-(3)]
	_ = x[UpdateTower-(4)]
	_ = x[TPS-(5)]
	_ = x[PlaceTower-(6)]
	_ = x[RemoveTower-(7)]
	_ = x[SelectTower-(8)]
	_ = x[SelectedTower-(9)]
	_ = x[SelectedTowerInvalid-(10)]
	_ = x[DeselectTower-(11)]
	_ = x[IncomeTick-(12)]
	_ = x[WindowResizing-(13)]
	_ = x[NavigateTo-(14)]
	_ = x[StartGame-(15)]
	_ = x[OpenTowerMenu-(16)]
	_ = x[CloseTowerMenu-(17)]
	_ = x[GoHome-(18)]
	_ = x[SignUpError-(19)]
	_ = x[UserSignUp-(20)]
	_ = x[UserSignIn-(21)]
	_ = x[UserSignOut-(22)]
	_ = x[JoinWaitingRoom-(23)]
	_ = x[ExitWaitingRoom-(24)]
	_ = x[StartRoom-(25)]
	_ = x[ToggleStats-(26)]
	_ = x[VersionError-(27)]
	_ = x[CreateLobby-(28)]
	_ = x[DeleteLobby-(29)]
	_ = x[JoinLobby-(30)]
	_ = x[AddLobbies-(31)]
	_ = x[SelectLobby-(32)]
	_ = x[LeaveLobby-(33)]
	_ = x[UpdateLobby-(34)]
	_ = x[StartLobby-(35)]
	_ = x[AddPlayer-(36)]
	_ = x[RemovePlayer-(37)]
	_ = x[SyncState-(38)]
	_ = x[SyncUsers-(39)]
	_ = x[WaitRoomCountdownTick-(40)]
	_ = x[SyncWaitingRoom-(41)]
}

var _TypeValues = []Type{CursorMove, CameraZoom, SummonUnit, UpdateUnit, UpdateTower, TPS, PlaceTower, RemoveTower, SelectTower, SelectedTower, SelectedTowerInvalid, DeselectTower, IncomeTick, WindowResizing, NavigateTo, StartGame, OpenTowerMenu, CloseTowerMenu, GoHome, SignUpError, UserSignUp, UserSignIn, UserSignOut, JoinWaitingRoom, ExitWaitingRoom, StartRoom, ToggleStats, VersionError, CreateLobby, DeleteLobby, JoinLobby, AddLobbies, SelectLobby, LeaveLobby, UpdateLobby, StartLobby, AddPlayer, RemovePlayer, SyncState, SyncUsers, WaitRoomCountdownTick, SyncWaitingRoom}

var _TypeNameToValueMap = map[string]Type{
	_TypeName[0:11]:         CursorMove,
	_TypeLowerName[0:11]:    CursorMove,
	_TypeName[11:22]:        CameraZoom,
	_TypeLowerName[11:22]:   CameraZoom,
	_TypeName[22:33]:        SummonUnit,
	_TypeLowerName[22:33]:   SummonUnit,
	_TypeName[33:44]:        UpdateUnit,
	_TypeLowerName[33:44]:   UpdateUnit,
	_TypeName[44:56]:        UpdateTower,
	_TypeLowerName[44:56]:   UpdateTower,
	_TypeName[56:59]:        TPS,
	_TypeLowerName[56:59]:   TPS,
	_TypeName[59:70]:        PlaceTower,
	_TypeLowerName[59:70]:   PlaceTower,
	_TypeName[70:82]:        RemoveTower,
	_TypeLowerName[70:82]:   RemoveTower,
	_TypeName[82:94]:        SelectTower,
	_TypeLowerName[82:94]:   SelectTower,
	_TypeName[94:108]:       SelectedTower,
	_TypeLowerName[94:108]:  SelectedTower,
	_TypeName[108:130]:      SelectedTowerInvalid,
	_TypeLowerName[108:130]: SelectedTowerInvalid,
	_TypeName[130:144]:      DeselectTower,
	_TypeLowerName[130:144]: DeselectTower,
	_TypeName[144:155]:      IncomeTick,
	_TypeLowerName[144:155]: IncomeTick,
	_TypeName[155:170]:      WindowResizing,
	_TypeLowerName[155:170]: WindowResizing,
	_TypeName[170:181]:      NavigateTo,
	_TypeLowerName[170:181]: NavigateTo,
	_TypeName[181:191]:      StartGame,
	_TypeLowerName[181:191]: StartGame,
	_TypeName[191:206]:      OpenTowerMenu,
	_TypeLowerName[191:206]: OpenTowerMenu,
	_TypeName[206:222]:      CloseTowerMenu,
	_TypeLowerName[206:222]: CloseTowerMenu,
	_TypeName[222:229]:      GoHome,
	_TypeLowerName[222:229]: GoHome,
	_TypeName[229:242]:      SignUpError,
	_TypeLowerName[229:242]: SignUpError,
	_TypeName[242:254]:      UserSignUp,
	_TypeLowerName[242:254]: UserSignUp,
	_TypeName[254:266]:      UserSignIn,
	_TypeLowerName[254:266]: UserSignIn,
	_TypeName[266:279]:      UserSignOut,
	_TypeLowerName[266:279]: UserSignOut,
	_TypeName[279:296]:      JoinWaitingRoom,
	_TypeLowerName[279:296]: JoinWaitingRoom,
	_TypeName[296:313]:      ExitWaitingRoom,
	_TypeLowerName[296:313]: ExitWaitingRoom,
	_TypeName[313:323]:      StartRoom,
	_TypeLowerName[313:323]: StartRoom,
	_TypeName[323:335]:      ToggleStats,
	_TypeLowerName[323:335]: ToggleStats,
	_TypeName[335:348]:      VersionError,
	_TypeLowerName[335:348]: VersionError,
	_TypeName[348:360]:      CreateLobby,
	_TypeLowerName[348:360]: CreateLobby,
	_TypeName[360:372]:      DeleteLobby,
	_TypeLowerName[360:372]: DeleteLobby,
	_TypeName[372:382]:      JoinLobby,
	_TypeLowerName[372:382]: JoinLobby,
	_TypeName[382:393]:      AddLobbies,
	_TypeLowerName[382:393]: AddLobbies,
	_TypeName[393:405]:      SelectLobby,
	_TypeLowerName[393:405]: SelectLobby,
	_TypeName[405:416]:      LeaveLobby,
	_TypeLowerName[405:416]: LeaveLobby,
	_TypeName[416:428]:      UpdateLobby,
	_TypeLowerName[416:428]: UpdateLobby,
	_TypeName[428:439]:      StartLobby,
	_TypeLowerName[428:439]: StartLobby,
	_TypeName[439:449]:      AddPlayer,
	_TypeLowerName[439:449]: AddPlayer,
	_TypeName[449:462]:      RemovePlayer,
	_TypeLowerName[449:462]: RemovePlayer,
	_TypeName[462:472]:      SyncState,
	_TypeLowerName[462:472]: SyncState,
	_TypeName[472:482]:      SyncUsers,
	_TypeLowerName[472:482]: SyncUsers,
	_TypeName[482:506]:      WaitRoomCountdownTick,
	_TypeLowerName[482:506]: WaitRoomCountdownTick,
	_TypeName[506:523]:      SyncWaitingRoom,
	_TypeLowerName[506:523]: SyncWaitingRoom,
}

var _TypeNames = []string{
	_TypeName[0:11],
	_TypeName[11:22],
	_TypeName[22:33],
	_TypeName[33:44],
	_TypeName[44:56],
	_TypeName[56:59],
	_TypeName[59:70],
	_TypeName[70:82],
	_TypeName[82:94],
	_TypeName[94:108],
	_TypeName[108:130],
	_TypeName[130:144],
	_TypeName[144:155],
	_TypeName[155:170],
	_TypeName[170:181],
	_TypeName[181:191],
	_TypeName[191:206],
	_TypeName[206:222],
	_TypeName[222:229],
	_TypeName[229:242],
	_TypeName[242:254],
	_TypeName[254:266],
	_TypeName[266:279],
	_TypeName[279:296],
	_TypeName[296:313],
	_TypeName[313:323],
	_TypeName[323:335],
	_TypeName[335:348],
	_TypeName[348:360],
	_TypeName[360:372],
	_TypeName[372:382],
	_TypeName[382:393],
	_TypeName[393:405],
	_TypeName[405:416],
	_TypeName[416:428],
	_TypeName[428:439],
	_TypeName[439:449],
	_TypeName[449:462],
	_TypeName[462:472],
	_TypeName[472:482],
	_TypeName[482:506],
	_TypeName[506:523],
}

// TypeString retrieves an enum value from the enum constants string name.
// Throws an error if the param is not part of the enum.
func TypeString(s string) (Type, error) {
	if val, ok := _TypeNameToValueMap[s]; ok {
		return val, nil
	}

	if val, ok := _TypeNameToValueMap[strings.ToLower(s)]; ok {
		return val, nil
	}
	return 0, fmt.Errorf("%s does not belong to Type values", s)
}

// TypeValues returns all values of the enum
func TypeValues() []Type {
	return _TypeValues
}

// TypeStrings returns a slice of all String values of the enum
func TypeStrings() []string {
	strs := make([]string, len(_TypeNames))
	copy(strs, _TypeNames)
	return strs
}

// IsAType returns "true" if the value is listed in the enum definition. "false" otherwise
func (i Type) IsAType() bool {
	for _, v := range _TypeValues {
		if i == v {
			return true
		}
	}
	return false
}

// MarshalJSON implements the json.Marshaler interface for Type
func (i Type) MarshalJSON() ([]byte, error) {
	return json.Marshal(i.String())
}

// UnmarshalJSON implements the json.Unmarshaler interface for Type
func (i *Type) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return fmt.Errorf("Type should be a string, got %s", data)
	}

	var err error
	*i, err = TypeString(s)
	return err
}
