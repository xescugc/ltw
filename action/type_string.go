// Code generated by "enumer -type=Type -transform=snake -output=type_string.go -json"; DO NOT EDIT.

package action

import (
	"encoding/json"
	"fmt"
	"strings"
)

const _TypeName = "cursor_movecamera_zoomsummon_unittpsremove_unitsteal_liveplace_towerremove_towerselect_towerselected_towerselected_tower_invaliddeselect_towerincome_ticktower_attackunit_killedwindow_resizingnavigate_tostart_gameopen_tower_menuclose_tower_menugo_homechange_unit_linesign_up_erroruser_sign_upuser_sign_inuser_sign_outjoin_waiting_roomexit_waiting_roomtoggle_statsversion_erroradd_playerremove_playersync_statesync_userswait_room_countdown_ticksync_waiting_room"

var _TypeIndex = [...]uint16{0, 11, 22, 33, 36, 47, 57, 68, 80, 92, 106, 128, 142, 153, 165, 176, 191, 202, 212, 227, 243, 250, 266, 279, 291, 303, 316, 333, 350, 362, 375, 385, 398, 408, 418, 442, 459}

const _TypeLowerName = "cursor_movecamera_zoomsummon_unittpsremove_unitsteal_liveplace_towerremove_towerselect_towerselected_towerselected_tower_invaliddeselect_towerincome_ticktower_attackunit_killedwindow_resizingnavigate_tostart_gameopen_tower_menuclose_tower_menugo_homechange_unit_linesign_up_erroruser_sign_upuser_sign_inuser_sign_outjoin_waiting_roomexit_waiting_roomtoggle_statsversion_erroradd_playerremove_playersync_statesync_userswait_room_countdown_ticksync_waiting_room"

func (i Type) String() string {
	if i < 0 || i >= Type(len(_TypeIndex)-1) {
		return fmt.Sprintf("Type(%d)", i)
	}
	return _TypeName[_TypeIndex[i]:_TypeIndex[i+1]]
}

// An "invalid array index" compiler error signifies that the constant values have changed.
// Re-run the stringer command to generate them again.
func _TypeNoOp() {
	var x [1]struct{}
	_ = x[CursorMove-(0)]
	_ = x[CameraZoom-(1)]
	_ = x[SummonUnit-(2)]
	_ = x[TPS-(3)]
	_ = x[RemoveUnit-(4)]
	_ = x[StealLive-(5)]
	_ = x[PlaceTower-(6)]
	_ = x[RemoveTower-(7)]
	_ = x[SelectTower-(8)]
	_ = x[SelectedTower-(9)]
	_ = x[SelectedTowerInvalid-(10)]
	_ = x[DeselectTower-(11)]
	_ = x[IncomeTick-(12)]
	_ = x[TowerAttack-(13)]
	_ = x[UnitKilled-(14)]
	_ = x[WindowResizing-(15)]
	_ = x[NavigateTo-(16)]
	_ = x[StartGame-(17)]
	_ = x[OpenTowerMenu-(18)]
	_ = x[CloseTowerMenu-(19)]
	_ = x[GoHome-(20)]
	_ = x[ChangeUnitLine-(21)]
	_ = x[SignUpError-(22)]
	_ = x[UserSignUp-(23)]
	_ = x[UserSignIn-(24)]
	_ = x[UserSignOut-(25)]
	_ = x[JoinWaitingRoom-(26)]
	_ = x[ExitWaitingRoom-(27)]
	_ = x[ToggleStats-(28)]
	_ = x[VersionError-(29)]
	_ = x[AddPlayer-(30)]
	_ = x[RemovePlayer-(31)]
	_ = x[SyncState-(32)]
	_ = x[SyncUsers-(33)]
	_ = x[WaitRoomCountdownTick-(34)]
	_ = x[SyncWaitingRoom-(35)]
}

var _TypeValues = []Type{CursorMove, CameraZoom, SummonUnit, TPS, RemoveUnit, StealLive, PlaceTower, RemoveTower, SelectTower, SelectedTower, SelectedTowerInvalid, DeselectTower, IncomeTick, TowerAttack, UnitKilled, WindowResizing, NavigateTo, StartGame, OpenTowerMenu, CloseTowerMenu, GoHome, ChangeUnitLine, SignUpError, UserSignUp, UserSignIn, UserSignOut, JoinWaitingRoom, ExitWaitingRoom, ToggleStats, VersionError, AddPlayer, RemovePlayer, SyncState, SyncUsers, WaitRoomCountdownTick, SyncWaitingRoom}

var _TypeNameToValueMap = map[string]Type{
	_TypeName[0:11]:         CursorMove,
	_TypeLowerName[0:11]:    CursorMove,
	_TypeName[11:22]:        CameraZoom,
	_TypeLowerName[11:22]:   CameraZoom,
	_TypeName[22:33]:        SummonUnit,
	_TypeLowerName[22:33]:   SummonUnit,
	_TypeName[33:36]:        TPS,
	_TypeLowerName[33:36]:   TPS,
	_TypeName[36:47]:        RemoveUnit,
	_TypeLowerName[36:47]:   RemoveUnit,
	_TypeName[47:57]:        StealLive,
	_TypeLowerName[47:57]:   StealLive,
	_TypeName[57:68]:        PlaceTower,
	_TypeLowerName[57:68]:   PlaceTower,
	_TypeName[68:80]:        RemoveTower,
	_TypeLowerName[68:80]:   RemoveTower,
	_TypeName[80:92]:        SelectTower,
	_TypeLowerName[80:92]:   SelectTower,
	_TypeName[92:106]:       SelectedTower,
	_TypeLowerName[92:106]:  SelectedTower,
	_TypeName[106:128]:      SelectedTowerInvalid,
	_TypeLowerName[106:128]: SelectedTowerInvalid,
	_TypeName[128:142]:      DeselectTower,
	_TypeLowerName[128:142]: DeselectTower,
	_TypeName[142:153]:      IncomeTick,
	_TypeLowerName[142:153]: IncomeTick,
	_TypeName[153:165]:      TowerAttack,
	_TypeLowerName[153:165]: TowerAttack,
	_TypeName[165:176]:      UnitKilled,
	_TypeLowerName[165:176]: UnitKilled,
	_TypeName[176:191]:      WindowResizing,
	_TypeLowerName[176:191]: WindowResizing,
	_TypeName[191:202]:      NavigateTo,
	_TypeLowerName[191:202]: NavigateTo,
	_TypeName[202:212]:      StartGame,
	_TypeLowerName[202:212]: StartGame,
	_TypeName[212:227]:      OpenTowerMenu,
	_TypeLowerName[212:227]: OpenTowerMenu,
	_TypeName[227:243]:      CloseTowerMenu,
	_TypeLowerName[227:243]: CloseTowerMenu,
	_TypeName[243:250]:      GoHome,
	_TypeLowerName[243:250]: GoHome,
	_TypeName[250:266]:      ChangeUnitLine,
	_TypeLowerName[250:266]: ChangeUnitLine,
	_TypeName[266:279]:      SignUpError,
	_TypeLowerName[266:279]: SignUpError,
	_TypeName[279:291]:      UserSignUp,
	_TypeLowerName[279:291]: UserSignUp,
	_TypeName[291:303]:      UserSignIn,
	_TypeLowerName[291:303]: UserSignIn,
	_TypeName[303:316]:      UserSignOut,
	_TypeLowerName[303:316]: UserSignOut,
	_TypeName[316:333]:      JoinWaitingRoom,
	_TypeLowerName[316:333]: JoinWaitingRoom,
	_TypeName[333:350]:      ExitWaitingRoom,
	_TypeLowerName[333:350]: ExitWaitingRoom,
	_TypeName[350:362]:      ToggleStats,
	_TypeLowerName[350:362]: ToggleStats,
	_TypeName[362:375]:      VersionError,
	_TypeLowerName[362:375]: VersionError,
	_TypeName[375:385]:      AddPlayer,
	_TypeLowerName[375:385]: AddPlayer,
	_TypeName[385:398]:      RemovePlayer,
	_TypeLowerName[385:398]: RemovePlayer,
	_TypeName[398:408]:      SyncState,
	_TypeLowerName[398:408]: SyncState,
	_TypeName[408:418]:      SyncUsers,
	_TypeLowerName[408:418]: SyncUsers,
	_TypeName[418:442]:      WaitRoomCountdownTick,
	_TypeLowerName[418:442]: WaitRoomCountdownTick,
	_TypeName[442:459]:      SyncWaitingRoom,
	_TypeLowerName[442:459]: SyncWaitingRoom,
}

var _TypeNames = []string{
	_TypeName[0:11],
	_TypeName[11:22],
	_TypeName[22:33],
	_TypeName[33:36],
	_TypeName[36:47],
	_TypeName[47:57],
	_TypeName[57:68],
	_TypeName[68:80],
	_TypeName[80:92],
	_TypeName[92:106],
	_TypeName[106:128],
	_TypeName[128:142],
	_TypeName[142:153],
	_TypeName[153:165],
	_TypeName[165:176],
	_TypeName[176:191],
	_TypeName[191:202],
	_TypeName[202:212],
	_TypeName[212:227],
	_TypeName[227:243],
	_TypeName[243:250],
	_TypeName[250:266],
	_TypeName[266:279],
	_TypeName[279:291],
	_TypeName[291:303],
	_TypeName[303:316],
	_TypeName[316:333],
	_TypeName[333:350],
	_TypeName[350:362],
	_TypeName[362:375],
	_TypeName[375:385],
	_TypeName[385:398],
	_TypeName[398:408],
	_TypeName[408:418],
	_TypeName[418:442],
	_TypeName[442:459],
}

// TypeString retrieves an enum value from the enum constants string name.
// Throws an error if the param is not part of the enum.
func TypeString(s string) (Type, error) {
	if val, ok := _TypeNameToValueMap[s]; ok {
		return val, nil
	}

	if val, ok := _TypeNameToValueMap[strings.ToLower(s)]; ok {
		return val, nil
	}
	return 0, fmt.Errorf("%s does not belong to Type values", s)
}

// TypeValues returns all values of the enum
func TypeValues() []Type {
	return _TypeValues
}

// TypeStrings returns a slice of all String values of the enum
func TypeStrings() []string {
	strs := make([]string, len(_TypeNames))
	copy(strs, _TypeNames)
	return strs
}

// IsAType returns "true" if the value is listed in the enum definition. "false" otherwise
func (i Type) IsAType() bool {
	for _, v := range _TypeValues {
		if i == v {
			return true
		}
	}
	return false
}

// MarshalJSON implements the json.Marshaler interface for Type
func (i Type) MarshalJSON() ([]byte, error) {
	return json.Marshal(i.String())
}

// UnmarshalJSON implements the json.Unmarshaler interface for Type
func (i *Type) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return fmt.Errorf("Type should be a string, got %s", data)
	}

	var err error
	*i, err = TypeString(s)
	return err
}
